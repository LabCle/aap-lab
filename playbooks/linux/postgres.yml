---
- name: Instalar e configurar PostgreSQL
  hosts: linux
  become: true
  vars:
    postgres_db: "labpg"
    postgres_user: "pguser"
    postgres_password: "PgPass123"

  tasks:
    ######################################################################
    # Instalação
    ######################################################################
    - name: Instalar PostgreSQL
      ansible.builtin.package:
        name: "{{ 'postgresql-server' if ansible_facts['os_family'] == 'RedHat' else 'postgresql' }}"
        state: present

    - name: Instalar contrib
      ansible.builtin.package:
        name: "{{ 'postgresql-contrib' if ansible_facts['os_family'] == 'RedHat' else 'postgresql-contrib' }}"
        state: present
      ignore_errors: true

    - name: Inicializar banco de dados PostgreSQL (RedHat)
      ansible.builtin.command: postgresql-setup --initdb
      when: ansible_facts['os_family'] == "RedHat"
      args:
        creates: /var/lib/pgsql/data/PG_VERSION

    - name: Garantir que PostgreSQL esteja ativo
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    ######################################################################
    # Criação de objetos
    ######################################################################
    - name: Criar database de teste PostgreSQL
      become_user: postgres
      community.postgresql.postgresql_db:
        name: "{{ postgres_db }}"
        state: present

    - name: Criar usuário de teste PostgreSQL
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        role_attr_flags: CREATEDB,LOGIN
        state: present

    - name: Garantir privilégios no DB
      become_user: postgres
      community.postgresql.postgresql_privs:
        db: "{{ postgres_db }}"
        roles: "{{ postgres_user }}"
        type: database
        privs: ALL
        state: present
