---
- name: Instalar e configurar PostgreSQL
  hosts: linux
  become: true
  vars:
    postgres_db: "labpg"
    postgres_user: "pguser"
    postgres_password: "PgPass123"

  tasks:
    ######################################################################
    # Instalação
    ######################################################################
    - name: Instalar PostgreSQL (server)
      ansible.builtin.package:
        name: "{{ 'postgresql-server' if ansible_facts['os_family'] == 'RedHat' else 'postgresql' }}"
        state: present

    - name: Instalar pacotes extras PostgreSQL
      ansible.builtin.package:
        name: "{{ 'postgresql-contrib' if ansible_facts['os_family'] == 'RedHat' else 'postgresql-contrib' }}"
        state: present
      ignore_errors: true

    - name: Inicializar banco de dados PostgreSQL (somente RedHat)
      ansible.builtin.command: postgresql-setup --initdb
      when: ansible_facts['os_family'] == "RedHat"
      args:
        creates: /var/lib/pgsql/data/PG_VERSION

    ######################################################################
    # Ajuste pg_hba.conf
    ######################################################################
    - name: Descobrir caminho do pg_hba.conf no Ubuntu/Debian
      ansible.builtin.shell: "ls -1 /etc/postgresql/*/main/pg_hba.conf | head -n 1"
      register: pg_hba_conf_path
      changed_when: false
      when: ansible_facts['os_family'] == "Debian"

    - name: Ajustar pg_hba.conf (Debian/Ubuntu)
      ansible.builtin.lineinfile:
        path: "{{ pg_hba_conf_path.stdout }}"
        regexp: '^local\s+all\s+all\s+.*$'
        line: 'local all all md5'
        state: present
      when: ansible_facts['os_family'] == "Debian"
      notify: restart postgres

    - name: Ajustar pg_hba.conf (RedHat)
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/data/pg_hba.conf
        regexp: '^local\s+all\s+all\s+.*$'
        line: 'local all all md5'
        state: present
      when: ansible_facts['os_family'] == "RedHat"
      notify: restart postgres

    ######################################################################
    # Serviço
    ######################################################################
    - name: Garantir que PostgreSQL esteja ativo
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    ######################################################################
    # Banco de dados e usuário
    ######################################################################
    - name: Criar database de teste PostgreSQL
      community.postgresql.postgresql_db:
        name: "{{ postgres_db }}"
        state: present
        login_user: postgres

    - name: Criar usuário de teste PostgreSQL
      community.postgresql.postgresql_user:
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        role_attr_flags: CREATEDB
        state: present
        login_user: postgres

  handlers:
    - name: restart postgres
      ansible.builtin.service:
        name: postgresql
        state: restarted
